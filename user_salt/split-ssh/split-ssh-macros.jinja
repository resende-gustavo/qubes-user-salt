{% macro split_ssh_dom0(WORKSPACE,TEMPLATE,KEYS_CLIENT) -%}

workspace-ssh-vault--create-qube:
  qvm.vm:
    - name: {{ WORKSPACE }}-ssh-vault
    - present:
      - template: {{ TEMPLATE }}
      - label: black
    - prefs:
      - label: black
      - netvm: none
    - features:
      - set:
        - menu-items: org.keepassxc.KeePassXC.desktop

{% if pillar['KEYS_CLIENT'] == 'false' %}
        
workspace-ssh-client-dvm--create-qube:
  qvm.vm:
    - name: {{ WORKSPACE }}-ssh-client-dvm
    - present:
      - template: {{ TEMPLATE }}
      - label: black
    - prefs:
      - label: black
      - netvm: none
      - template_for_dispvms: True

workspace-ssh-client--create-qube:
  qvm.vm:
    - name: {{ WORKSPACE }}-ssh-client
    - present:
      - class: DispVM
      - template:  {{ WORKSPACE }}-ssh-client-dvm
      - label: black
    - prefs:
      - label: black

{% elif KEYS_CLIENT == 'true' %}

workspace-keys-client-dvm--create-qube:
  qvm.vm:
    - name: {{ WORKSPACE }}-keys-client-dvm
    - present:
      - template: {{ TEMPLATE }}
      - label: black
    - prefs:
      - label: black
      - netvm: none
      - template_for_dispvms: True

workspace-keys-client--create-qube:
  qvm.vm:
    - name: {{ WORKSPACE }}-keys-client
    - present:
      - class: DispVM
      - template:  {{ WORKSPACE }}-keys-client-dvm
      - label: black
    - prefs:
      - label: black

{% endif %}

setup-policies:
  file.append:
    - name: /etc/qubes/policy.d/10-user-splitssh.policy
    - text: |
        qubes.SshAgent	*	{{ WORKSPACE }}-ssh-client	{{ WORKSPACE }}-ssh-vault	ask
{%- endmacro %}


{% macro split_ssh_vault() -%}

generate-config-files:
  file.managed:
    - name: /home/user/.config/autostart/ssh-add.desktop
    - makedirs: Trueh
    - user: root
    - mode: 644
    - contents: |
        [Desktop Entry]
        Name=ssh-add
        Exec=ssh-add -c
        Type=Application
        
{%- endmacro %}


{% macro split_ssh_template() -%}

setup-rpc:
  file.managed:
    - name: /etc/qubes-rpc/qubes.SshAgent
    - makedirs: True
    - user: user
    - mode: 755
    - contents: |
        #!/bin/sh
        # Qubes App Split SSH Script
        # safeguard - Qubes notification bubble for each ssh request
        notify-send "[$(qubesdb-read /name)] SSH agent access from: $QREXEC_REMOTE_DOMAIN"
        # SSH connection
        socat - "UNIX-CONNECT:$SSH_AUTH_SOCK"

{%- endmacro %}


{% macro split_ssh_client(WORKSPACE) -%}

split-ssh-configuration:
  file.managed:
    - name: /rw/config/rc.local
    - user: root
    - makedirs: True
    - mode: 755
    - contents: |
        # SPLIT SSH CONFIGURATION >>>
        # replace "ssh-vault" with your AppVM name which stores the ssh private key(s)
        SSH_VAULT_VM="{{ WORKSPACE }}-ssh-vault" 
        if [ "$SSH_VAULT_VM" != "" ]; then
        	export SSH_SOCK="/home/user/.SSH_AGENT_$SSH_VAULT_VM"
        	rm -f "$SSH_SOCK"
        	sudo -u user /bin/sh -c "umask 177 && exec socat 'UNIX-LISTEN:$SSH_SOCK,fork' 'EXEC:qrexec-client-vm $SSH_VAULT_VM qubes.SshAgent'" &
        fi
        # <<< SPLIT SSH CONFIGURATION

split-ssh-configuration-bashrc:
  file.append:
    - name: /home/user/.bashrc
    - text: |
        # SPLIT SSH CONFIGURATION >>>
        # replace "ssh-vault" with your AppVM name which stores the ssh private key(s)
        SSH_VAULT_VM="{{ WORKSPACE }}-ssh-vault"
        if [ "$SSH_VAULT_VM" != "" ]; then
        	export SSH_AUTH_SOCK="/home/user/.SSH_AGENT_$SSH_VAULT_VM"
        fi
        # <<< SPLIT SSH CONFIGURATION

{%- endmacro %}
