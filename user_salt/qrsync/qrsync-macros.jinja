{% macro qrsync_setup(server,client) -%}
create-qrsync-common-template:
  qvm.clone:
    - name: pillar['default_template']-qrsync
    - source: pillar['default_template']
    
create-qrsync-server-qube:
  qvm.vm:
    - name: {{ server }}
    - present:
      - template: pillar['default_template']-qrsync
      - label: blue
    - prefs:
      - label: blue
      
create-qrsync-client-qube:
  qvm.vm:
    - name: {{ client }}
    - present:
      - template: pillar['default_template']-qrsync
      - label: blue
    - prefs:
      - label: blue
{%- endmacro %}


{% macro qrsync_policy(server,client) -%}

policy:
  file.append:
    - name: /etc/qubes/policy.d/10-user-qrsync.policy
    - text: |
        qubes.Rsync	*	{{ client }}	@anyvm	allow	target={{ server }}

{%- endmacro %}

{% macro qrsync_template() -%}

rsyncd.conf:
  file.managed:
    - name: /etc/rsyncd.conf
    - user: root
    - mode: 644
    - makedirs: True
    - contents: |
        # rsyncd.conf configuration file
        # GLOBAL OPTIONS
        # motd file=/etc/motd
        # log file=/var/log/rsyncd
        # for pid file, do not use /var/run/rsync.pid if
        # you are going to run rsync out of the init.d script.
        # The init.d scipt does its own pid file handling,
        # so omit the "pid file" line completely in that case.
        # pid file=/var/run/rsyncd.pid
        # syslog facility=daemon
        # socket options=
        port = 873
        # MODULE OPTIONS
        [shared]
        path = /home/user/shared
        comment = Shared r/w area
        read only = no
        [archive]
        path = /home/user/archive
        comment = Shared read only area
        read only = yes

qubes.Rsync:
  file.managed:
    - name: /etc/qubes-rpc/qubes.Rsync
    - mode: 755
    - user: root
    - makedirs: True
    - contents: |
        #!/bin/sh
        exec socat STDIO TCP:localhost:873

qubes-rsync-forwarder--service:
  file.managed:
    - name: /lib/systemd/system/qubes-rsync-forwarder@.service
    - mode: 755
    - user: root
    - makedirs: True
    - contents: |
        [Unit]
        Description=Forward connection to rsync over Qubes RPC
        [Service]
        ExecStart=/usr/bin/qrexec-client-vm '' qubes.Rsync
        StandardInput=socker
        StandardOutput=inherit

qubes-rsync-forwarder--socket:
  file.managed:
    - name: /lib/systemd/system/qubes-rsync-forwarder.socket
    - mode: 755
    - user: root
    - makedirs: True
    - contents: |
        [Unit]
        Description=Forward connection to rsync over Qubes RPC
        ConditionPathExists=/var/run/qubes-service/rsync-setup
        [Socket]
        ListenStream=127.0.0.1:837
        BindToDevice=lo
        Accept=true
        [Install]
        WantedBy=multi-user.target

qubes.ssh:
  file.managed:
    - name: /etc/qubes-rpc/qubes.ssh
    - mode: 755
    - user: root
    - makedirs: True
    - contents: |
        #!/bin/sh
        exec socat STDIO TCP:localhost:22

qubes-ssh-forwarder--socket:
  file.managed:
    - name: /lib/systemd/system/qubes-ssh-forwarder.socket
    - mode: 755
    - user: root
    - makedirs: True
    - contents: |
        [Unit]
        Description= Forward connection to ssh over Qubes RPC
        ConditionPathExists=/var/run/qubes-service/ssh-setup
        [Socket]
        ListenStream=127.0.0.1:840
        BindToDevice=lo
        Accept=true
        [Install]
        WantedBy=multi-user.target

qubes-ssh-forwarder--service:
  file.managed:
    - name: /lib/systemd/system/qubes-ssh-forwarder@.service
    - mode: 755
    - user: root
    - makedirs: True
    - contents: |
        [Unit]
        Description=Forward connection to ssh over Qubes RPC
        [Service]
        ExecStart=/usr/bin/qrexec-client-vm '' qubes.ssh
        StandardInput=socket
        StandardOutput=inherit
        
qrsync--setsebool:
  cmd.run:
    - name: setsebool -P rsync_export_all_ro 1
    - runas: root
        

{%- endmacro %}
